---
- hosts: "{{ rhel_nodes }}"
  become: false
  tasks:
  - name: Interrogate one RHEL node to get requisite files for convert2rhel requirements
    block:
      - name: verify operating system
        assert:
          that: "ansible_distribution == 'RedHat'"

      - find: paths="/etc/pki/entitlement" recurse=yes patterns="*.pem"
        register: entitlement_certs

      #- include: c2r_subtasks.yml full_file_path={{ item.path }}
      #  with_items:
      #  - "{{ entitlement_certs.files }}"
      - set_fact:
          entitlement_certs_files: "{{ entitlement_certs.files }}"

      - debug:
          msg: "entitlement_certs_files ==> {{ entitlement_certs_files | map(attribute='path') | list }}"

      - name: Slurp "{{ item }}" from rhel node to control
      #- include: c2r_subtasks.yml full_file_path={{ item }}
        slurp: src="{{ item }}"
        register: slurped_files
        with_items:
        - "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
        - "/etc/yum.repos.d/redhat.repo"
        - "{{ entitlement_certs_files | map(attribute='path') | list }}"

        - set_fact:
          slurped_files_list: "{{ slurped_files }}"

      # This provides dict of slurped files
      #- debug:
      #    msg: "{{ slurped_files.results }}"

      - debug:
          msg:
            - "Source  ==> {{ item['source'] }}"
            - "Content ==> {{ item['content'] | b64decode }}"
          #msg: "{{ item['content'] | b64decode }}"
        with_items: "{{ slurped_files['results'] }}" 

  run_once: yes

- hosts: "{{ centos_nodes }}"
  become: true
  tasks:
  - name: verify operating system
    assert:
      that: "ansible_distribution == 'CentOS'"

  - name: stat redhat.repo
    stat: path=/etc/yum.repos.d/redhat.repo
    register: redhat_repofile_stat

  - name: Move redhat.repo to centos_satellite.repo
    command: mv /etc/yum.repos.d/redhat.repo /etc/yum.repos.d/centos_satellite.repo
    when: redhat_repofile_stat.stat.exists

  - name: Unslurp via Copy content "{{ item['source'] }}" from control to centos node
    copy:
      content: "{{ item['content'] | b64decode }}"
      dest: "{{ item['source'] }}"
    with_items: "{{ slurped_files_list['results'] }}"

  - name: Ensure "{{ item }}" is immutable
    file:
      path: "{{ item }}"
      attr: +i
    with_items:
    - "{{ entitlement_certs_files | map(attribute='path') | list }}"
    register: cert_file
    changed_when: "'i' not in cert_file.diff.before.attributes"
