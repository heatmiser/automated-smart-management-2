---
- hosts: "{{ rhel_nodes }}"
  become: false
  tasks:
  - name: Interrogate one RHEL node to get requisite files for convert2rhel requirements
    block:
      - name: verify operating system
        assert:
          that: "ansible_distribution == 'RedHat'"

      - find: paths="/etc/pki/entitlement" recurse=yes patterns="*.pem"
        register: entitlement_certs

      #- include: c2r_subtasks.yml full_file_path={{ item.path }}
      #  with_items:
      #  - "{{ entitlement_certs.files }}"
      - set_fact:
          entitlement_certs_files: "{{ entitlement_certs.files }}"
        delegate_to: "{{ item }}"
        delegate_facts: True
        with_items: "{{ groups['all'] }}"

      - debug:
          msg: "entitlement_certs_files ==> {{ entitlement_certs_files | map(attribute='path') | list }}"

      - name: Slurp "{{ item }}" from rhel node to control
      #- include: c2r_subtasks.yml full_file_path={{ item }}
        slurp: src="{{ item }}"
        register: slurped_files
        with_items:
        - "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
        - "/etc/yum.repos.d/redhat.repo"
        - "{{ entitlement_certs_files | map(attribute='path') | list }}"

      - set_fact:
          slurped_files_list: "{{ slurped_files }}"
        delegate_to: "{{ item }}"
        delegate_facts: True
        with_items: "{{ groups['all'] }}"

      # This provides dict of slurped files
      #- debug:
      #    msg: "{{ slurped_files.results }}"

      - debug:
          msg:
            - "Source  ==> {{ item['source'] }}"
            - "Content ==> {{ item['content'] | b64decode }}"
          #msg: "{{ item['content'] | b64decode }}"
        with_items: "{{ slurped_files['results'] }}"

  run_once: yes

- hosts: "{{ centos_nodes }}"
  become: true
  vars:
    convert2rhel_timeout: 14400
    convert2rhel_retry_interval: 15
  tasks:
  - name: verify operating system
    assert:
      that: "ansible_distribution == 'CentOS'"

  - name: filter repo files from centos-release base
    find:
      paths: /etc/yum.repos.d
      patterns: "CentOS*.repo"
      use_regex: true
    register: repo_files_to_delete

  - name: remove repo files from centos-release base
    file:
      path: "{{ item.path }}"
      state: absent
    with_items: "{{ repo_files_to_delete.files }}"

  - name: Install convert2rhel rpm from Red Hat OS and App Modernization Group GitHub
    yum:
      name: https://github.com/oamg/convert2rhel/releases/download/v0.17/convert2rhel-0.17-1.el7.noarch.rpm
      state: present

  - name: Pull katello-ca-consumer package from satellite server and place under /usr/share/convert2rhel/subscription-manager
    get_url:
      url: https://satellite.example.com/pub/katello-ca-consumer-latest.noarch.rpm
      dest: /usr/share/convert2rhel/subscription-manager/katello-ca-consumer-latest.noarch.rpm
      mode: '0440'

  - name: "Add {{ ansible_distribution_major_version }}Server to file /etc/yum/vars/releasever if it does not exist on this CentOS {{ ansible_distribution_major_version }} system"
    lineinfile:
      path: /etc/yum/vars/releasever
      line: "{{ ansible_distribution_major_version }}Server"
      create: yes
    when: (ansible_distribution == 'CentOS' and ansible_distribution_major_version == '6') or (ansible_distribution == 'CentOS' and ansible_distribution_major_version == '7')

  - name: stat redhat.repo
    stat: path=/etc/yum.repos.d/redhat.repo
    register: redhat_repofile_stat

  - name: Move redhat.repo to centos_satellite.repo
    command: mv /etc/yum.repos.d/redhat.repo /etc/yum.repos.d/centos_satellite.repo
    when: redhat_repofile_stat.stat.exists

  - name: Unslurp via Copy content "{{ item['source'] }}" from control to centos node
    copy:
      content: "{{ item['content'] | b64decode }}"
      dest: "{{ item['source'] }}"
    with_items: "{{ slurped_files_list['results'] }}"

  - name: Ensure "{{ item }}" is immutable
    file:
      path: "{{ item }}"
      attr: +i
    with_items:
    - "{{ entitlement_certs_files | map(attribute='path') | list }}"
    register: cert_file
    changed_when: "'i' not in cert_file.diff.before.attributes"

  # Finish repo file shell game...
  - name: Move redhat.repo to rhel_satellite.repo
    command: mv /etc/yum.repos.d/redhat.repo /etc/yum.repos.d/rhel_satellite.repo

  - name: Move centos_satellite.repo to redhat.repo
    command: mv /etc/yum.repos.d/centos_satellite.repo /etc/yum.repos.d/redhat.repo.repo

  - name: Launch conversion asynchronously
    command: >-
      convert2rhel --disable-submgr
        --disablerepo "*" 
        --enablerepo rhel-7-server-rpms
        --enablerepo rhel-7-server-extras-rpms
        --enablerepo rhel-7-server-satellite-tools-6.8-rpms
        --no-rpm-va
    async: "{{ convert2rhel_timeout }}"
    poll: 0
    register: convert2rhel_async

  - name: Check if conversion is finished
    async_status:
      jid: "{{ convert2rhel_async.ansible_job_id }}"
    register: job_result
    until: job_result.finished
    retries: "{{ ( convert2rhel_timeout / convert2rhel_retry_interval ) | int }}"
    delay: "{{ convert2rhel_retry_interval }}"

  - name: Reboot machine with a 15 minutes timeout
    reboot:
      reboot_timeout: 900
